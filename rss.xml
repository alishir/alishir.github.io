<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>نُکَتْ Blog</title>
        <link>https://alishir.github.io/</link>
        <description>نُکَتْ Blog</description>
        <lastBuildDate>Thu, 19 Dec 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>fa</language>
        <item>
            <title><![CDATA[روش کدگذاری TBCD]]></title>
            <link>https://alishir.github.io/telephony-binary-coded-decimal</link>
            <guid>https://alishir.github.io/telephony-binary-coded-decimal</guid>
            <pubDate>Thu, 19 Dec 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[کدگذاری، مشخص کننده ادبیات مشترک برای تعامل اجزاء یک سیستم با یکدیگر]]></description>
            <content:encoded><![CDATA[<p>کدگذاری، مشخص کننده ادبیات مشترک برای تعامل اجزاء یک سیستم با یکدیگر
است. در صورت عدم کدگذاری صحیح اجزاء یک سیستم نمی‌توانند به درستی با
یکدیگر تعامل کنند. به عنوان نمونه عبارت <code>01/11/06</code>، بسته به <a href="https://en.wikipedia.org/wiki/List_of_date_formats_by_country" target="_blank" rel="noopener noreferrer">روش
کدگذاری</a>
استفاده شده می‌تواند بیانگر تاریخ ۱ نوابر سال ۲۰۰۶ و یا ۱۱ ژانویه سال
۲۰۰۶ باشد. این مثال به خوبی اهمیت موضوع کدگذاری را مشخص می‌کند.</p>
<p>یکی از روش‌های کدگذاری مورد استفاده در شبکه‌های مخابراتی، روش Telephony
Binary-Coded Decimal یا به اختصار TBCD است. این روش برای کدگذاری
مقادیری مانند <code>IMSI</code>، <code>IMEI</code> و برخی آدرس‌ها و شماره‌ها استفاده
می‌شود. مثلا در سند <a href="https://www.3gpp.org/dynareport?code=29338" target="_blank" rel="noopener noreferrer">3GPP TS
29.338</a> به چند نمونه از
آدرس‌هایی که با روش TBCD کدگذاری شده‌اند اشاره شده است.</p>
<p>روش کدگذاری TBCD برای نمایش اعداد بین ۰ تا ۹ و حروف <code>a, b, c,#,*</code>
استفاده می‌شود. برای صرفه‌جویی در فضا، هر دو رقم متوالی در یکی بایت
ذخیره می‌شوند، به عبارت دیگر برای ذخیره هر رقم از چهار بیت استفاده
می‌شود. در صورتی که تعداد ارقام فرد باشد برای پر کردن ۴ بیت باقی‌مانده،
از مقدار <code>1111</code> به عنوان پرکننده یا <code>filler</code> استفاده می‌شود.</p>
<p>اعداد ۰ تا ۹ با مقدار متناظر دودویی آن‌ها در نمایش ۴ بیتی کدگذاری
می‌شوند و از مقادیر زیر برای حروف <code>a, b, c, # ,*</code> استفاده می‌شود.</p>
<table><thead><tr><th style="text-align:center">حرف</th><th style="text-align:center">مقدار دودویی</th></tr></thead><tbody><tr><td style="text-align:center">*</td><td style="text-align:center">1010</td></tr><tr><td style="text-align:center">#</td><td style="text-align:center">1011</td></tr><tr><td style="text-align:center">a</td><td style="text-align:center">1100</td></tr><tr><td style="text-align:center">b</td><td style="text-align:center">1101</td></tr><tr><td style="text-align:center">c</td><td style="text-align:center">1110</td></tr></tbody></table>
<p>در شکل زیر روش کدگذاری TBCD برای مقدار <code>43211</code> نمایش داده شده. ابتدا
هر رقم را با مقدار دودویی ۴ بیتی متناظر تبدیل می‌کنیم. سپس هر دو رقم را
در یک بایت قرار می‌دهیم، به این صورت که اگر بیت‌های موجود در یک بایت را
از راست به چپ، از ۱ تا ۸ شماره‌گذاری کنیم، بیت‌های شماره ۱ تا ۴ برای
نمایش رقم اول و بیت‌های شماره ۵ تا ۸ برای نمایش رقم دوم تخصیص
می‌یابند. در این مثال با توجه به اینکه تعداد ارقام فرد است، از مقدار
<code>1111</code> به عنوان پرکننده ۴ بیت خالی استفاده می‌شود که در شکل با رنگ قرمز
نمایش داده شده است. در نهایت حاصل کدگذاری مقدار <code>0x3412F1</code> می‌باشد.</p>
<div style="text-align:center"><p><img decoding="async" loading="lazy" alt="TBCD-String Encoding Example" src="https://alishir.github.io/assets/images/example_43211-5e2c6e7e64980a866ed71578a07b0a9a.svg" width="615" height="394" class="img_ev3q"></p></div>
<p>تصویر زیر توضیحات کدگذاری TBCD است که در سند <a href="https://www.3gpp.org/dynareport?code=29002" target="_blank" rel="noopener noreferrer">3GPP TS
29.002</a> به آن اشاره شده.</p>
<div style="text-align:center"><p><img decoding="async" loading="lazy" alt="TBCD-String Encoding" src="https://alishir.github.io/assets/images/tbcd_encoding-7998f45655a0fd2267426e7c37fb78ab.png" width="1845" height="344" class="img_ev3q"></p></div>]]></content:encoded>
            <category>TBCD</category>
            <category>کدگذاری</category>
        </item>
        <item>
            <title><![CDATA[ماشین حالت]]></title>
            <link>https://alishir.github.io/state-machine</link>
            <guid>https://alishir.github.io/state-machine</guid>
            <pubDate>Mon, 28 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[واضع عبارت Structured Concurrency در چند نوشته خود به همروندی]]></description>
            <content:encoded><![CDATA[<p>واضع عبارت <code>Structured Concurrency</code> در چند نوشته خود به همروندی
ساخت‌یافته به عنوان راه رهایی از ماشین حالت اشاره می‌کند.</p>
<p>امروز <a href="https://aws.amazon.com/blogs/architecture/lets-architect-designing-serverless-solutions/" target="_blank" rel="noopener noreferrer">این
مطلب</a>
و دو ویدئویی که به آن اشاره شده را می‌دیدم. جایی در <a href="https://www.youtube.com/watch?v=qs0U0LdNkV0" target="_blank" rel="noopener noreferrer">این
ویدئو</a> در حین پیاده‌سازی
پروژه <code>serverlesspresso</code> متوجه می‌شوند که گویا در حال پیاده‌سازی یک
ماشین حالت هستند. در نهایت ماشین حالت را به یک سری تابع تبدیل می‌کنند
که بر بستر <code>AWS Lambda</code> قابل اجرا باشد و با استفاده از <code>EventBridge</code>
رخدادهای خارجی را پوشش می‌دهند.  به نظر آمازون با سبد محصولی خود تمام
زیرساخت مورد نیاز برای پیاده‌سازی یک ماشین حالت در حالت مقیاس‌پذیر را
فراهم کرده است.</p>
<p>اما اگر به <a href="https://250bpm.com/blog:71/" target="_blank" rel="noopener noreferrer">نوشته‌های</a> آقای <code>Martin Sústrik</code> در مورد همروندی ساخت‌یافته مراجعه کنیم، ایشان دو مشکل را در
مورد ماشین حالت ذکر می‌کنند، اول اینکه ماشین‌های حالت معمولا بزرگ و
شکننده هستند و دوم اینکه معمولا زبان‌های برنامه نویسی به صورت ذاتی از
آن‌ها پشتیبانی نمی‌کنند.</p>
<p>اما در مورد زبان‌ <code>Erlang</code> قضیه متفاوت است و این زبان به صورت ذاتی
رویکردی برای پیاده‌سازی ماشین حالت دارد که تحت عنوان رفتار <code>gen_statem</code>
شناخته
می‌شود. <a href="https://www.erlang.org/doc/system/design_principles.html#behaviours" target="_blank" rel="noopener noreferrer">رفتارها</a>
در این زبان چیزی شبیه مفهوم <code>Design Pattern</code> هستند. برای آشنایی بیشتر
با ماشین حالت در این زبان <a href="https://www.erlang.org/doc/apps/stdlib/gen_statem" target="_blank" rel="noopener noreferrer">مستندات
اصلی</a> خیلی راهگشا
هستند.</p>]]></content:encoded>
            <category>Erlang</category>
            <category>Elixir</category>
            <category>gen_statem</category>
            <category>AWS Lambda</category>
            <category>Structured Concurrency</category>
        </item>
        <item>
            <title><![CDATA[ظرائف استفاده از cloud-init]]></title>
            <link>https://alishir.github.io/cloud-init</link>
            <guid>https://alishir.github.io/cloud-init</guid>
            <pubDate>Wed, 23 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[معمولا برای راه‌اندازی سریع یک ماشین ‌مجازی از دیسک‌های آماده شده برای]]></description>
            <content:encoded><![CDATA[<p>معمولا برای راه‌اندازی سریع یک ماشین ‌مجازی از دیسک‌های آماده شده برای
زیرساخت ابری یا به اصطلاح cloud-ready images استفاده می‌کنم. مثلا اگر
قرار باشه یه ماشین‌مجازی ubuntu نسخه ۲۲.۰۴ را برای کاری استفاده کنم، از
<a href="https://cloud-images.ubuntu.com/" target="_blank" rel="noopener noreferrer" title="ubuntu cloud-ready image
site">اینجا</a> نسخه سیستم عامل را انتخاب می‌کنم و بعد فایل با پسوند
<code>disk-kvm.img</code> را دانلود می‌کنم.</p>
<p>برای راه‌اندازی ماشین مجازی از طریق <code>cloud-init</code> باید از طریق یک منبعی
برخی از پارامترها برای تنظیمات اولیه ماشین مجازی مشخص شود، مثل پسورد
یا شناسه. نکته مهم اینجاست که مستندات آخرین نسخه <code>cloud-init</code> معمولا
روش ساده و سریع برای تست این موضوع مشخص کرده، مثلا در <a href="https://cloudinit.readthedocs.io/en/latest/tutorial/qemu.html" target="_blank" rel="noopener noreferrer">این
قسمت</a>
از روش <code>IMDS</code> استفاده کردند.</p>
<p>اما نکته اینجاست که نسخه <code>cloud-init</code> نصب شده به صورت پیش‌فرض روی فایل
دانلود شده لزوما آخرین نسخه نیست و احتمالا از روش ذکر شده در آخرین
نسخه مستندات هم پشتیبانی نمی‌کنه. برای همین باید اول نسخه <code>cloud-init</code>
نصب شده را پیدا کنیم و بعد از روش متناسب با همون نسخه استفاده کنیم،
مثلا از روش <code>seed.iso</code> استفاده کنیم که در
<a href="https://cloudinit.readthedocs.io/en/22.1_a/topics/debugging.html#analyze-quickstart-kvm" target="_blank" rel="noopener noreferrer">اینجا</a>
بهش اشاره شده.</p>
<p>خلاصه روش به این صورت هست که شما یک فایل با اسم <code>user-data</code> ایجاد می‌کنید با محتوای زیر:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#cloud-config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">password: passw0rd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ssh_authorized_keys:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - ssh-ed25519 .... ali@dev</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chpasswd: { expire: False }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="کپی به کلیپ‌بورد" title="کپی" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>سپس با دستور زیر فایل <code>seed.iso</code> را ایجاد می‌کنید:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt install -y cloud-image-utils</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cloud-localds seed.img user-data</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="کپی به کلیپ‌بورد" title="کپی" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>و در نهایت ماشین مجازی را به این صورت راه می‌اندازیم:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">qemu-system-amd64 -enable-kvm -m 1G -smp 2 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  -vga std -nic user \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  -drive file=ubuntu.img,if=virtio,format=qcow2 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  -drive file=seed.img,if=virtio,format=raw</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="کپی به کلیپ‌بورد" title="کپی" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>نکته دیگر اینکه در صورتی که از نسخه <code>debian-genericcloud</code> استفاده می‌کنید به دلیل عدم وجود درایورهای دستگاه‌های فیزیکی بر روی این نسخه حتما باید از نسخه‌هایی مانند <code>virtio</code> برای دستگاه‌ها استفاده کنید.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">qemu-system-amd64 -enable-kvm -m 1G -smp 2 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  -vga std -nic user,model=virtio \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  -drive file=debian-genericcloud.img,if=virtio,format=qcow2 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  -drive file=seed.img,if=virtio,format=raw</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="کپی به کلیپ‌بورد" title="کپی" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>مجازی‌سازی</category>
            <category>qemu</category>
            <category>cloud-init</category>
        </item>
        <item>
            <title><![CDATA[معماری NFV]]></title>
            <link>https://alishir.github.io/NFV-Architecture</link>
            <guid>https://alishir.github.io/NFV-Architecture</guid>
            <pubDate>Wed, 23 Oct 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[امروز [این]]></description>
            <content:encoded><![CDATA[<p>امروز <a href="https://www.etsi.org/images/articles/NFV_Architecture.svg" target="_blank" rel="noopener noreferrer" title="NFV
Architecture">این
فایل</a> با فرمت <code>SVG</code> که بیانگر معماری NFV هست دیدم، صرفا برای
ارجاعات بعدی اینجا هم قرارش میدم. جا داره که از آقای <a href="https://www.linkedin.com/in/laurent-vreck-560174/" target="_blank" rel="noopener noreferrer" title="Laurent
Vreck LinkedIn Profile">Laurent
Vreck</a> بابت این فایل کاربردی تشکر کنم. یکی از مزایای
این فایل لینک‌هایی هست که در هر قسمت به مستندات مربوطه قرار داده شده.</p>
<p><img decoding="async" loading="lazy" alt="NFV Architecture" src="https://alishir.github.io/assets/images/NFV_Architecture-dbb8237de9059fa857c08923dda30620.svg" class="img_ev3q"></p>]]></content:encoded>
            <category>NFV</category>
            <category>ETSI</category>
            <category>معماری</category>
        </item>
    </channel>
</rss>